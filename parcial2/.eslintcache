[{"C:\\Users\\Santiago\\Desktop\\RepositoriosWEB\\EjerciciosWeb\\Parcial2\\parcial2\\src\\index.js":"1","C:\\Users\\Santiago\\Desktop\\RepositoriosWEB\\EjerciciosWeb\\Parcial2\\parcial2\\src\\App.js":"2","C:\\Users\\Santiago\\Desktop\\RepositoriosWEB\\EjerciciosWeb\\Parcial2\\parcial2\\src\\reportWebVitals.js":"3","C:\\Users\\Santiago\\Desktop\\RepositoriosWEB\\EjerciciosWeb\\Parcial2\\parcial2\\src\\serviceWorkerRegistration.js":"4","C:\\Users\\Santiago\\Desktop\\RepositoriosWEB\\EjerciciosWeb\\Parcial2\\parcial2\\src\\components\\table\\table.js":"5","C:\\Users\\Santiago\\Desktop\\RepositoriosWEB\\EjerciciosWeb\\Parcial2\\parcial2\\src\\components\\table\\row.js":"6","C:\\Users\\Santiago\\Desktop\\RepositoriosWEB\\EjerciciosWeb\\Parcial2\\parcial2\\src\\components\\NavBar\\NavBar.js":"7"},{"size":1096,"mtime":1607127359048,"results":"8","hashOfConfig":"9"},{"size":326,"mtime":1607124177897,"results":"10","hashOfConfig":"9"},{"size":364,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":5064,"mtime":499162500000,"results":"12","hashOfConfig":"9"},{"size":6023,"mtime":1607127327577,"results":"13","hashOfConfig":"9"},{"size":196,"mtime":1607046673295,"results":"14","hashOfConfig":"9"},{"size":803,"mtime":1607048895036,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1stdhb",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\Santiago\\Desktop\\RepositoriosWEB\\EjerciciosWeb\\Parcial2\\parcial2\\src\\index.js",[],["33","34"],"C:\\Users\\Santiago\\Desktop\\RepositoriosWEB\\EjerciciosWeb\\Parcial2\\parcial2\\src\\App.js",[],"C:\\Users\\Santiago\\Desktop\\RepositoriosWEB\\EjerciciosWeb\\Parcial2\\parcial2\\src\\reportWebVitals.js",[],"C:\\Users\\Santiago\\Desktop\\RepositoriosWEB\\EjerciciosWeb\\Parcial2\\parcial2\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\Santiago\\Desktop\\RepositoriosWEB\\EjerciciosWeb\\Parcial2\\parcial2\\src\\components\\table\\table.js",["35"],"import React, { useState, useEffect } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport { FormattedDate, FormattedMessage } from \"react-intl\";\r\nimport detectBrowserLanguage from \"detect-browser-language\";\r\nimport * as d3 from \"d3\";\r\n//import Tweet from \"./row\";\r\n\r\nexport default function TableParc() {\r\n  let [tweets, setTweets] = useState([\r\n    {\r\n      abilities: [\"Overgrow\"],\r\n      detailPageURL: \"/us/pokedex/bulbasaur\",\r\n      description:\r\n        \"Hay una semilla de planta en su parte posterior desde el día en que nace este Pokémon. La semilla crece lentamente\",\r\n      weight: 15.2,\r\n      weakness: [\"Fire\", \"Flying\", \"Ice\", \"Psychic\"],\r\n      number: \"001\",\r\n      height: 28,\r\n      collectibles_slug: \"bulbasaur\",\r\n      featured: \"true\",\r\n      slug: \"bulbasaur\",\r\n      name: \"Bulbasaur\",\r\n      ThumbnailAltText: \"Bulbasaur\",\r\n      ThumbnailImage:\r\n        \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/001.png\",\r\n      id: 1,\r\n      type: [\"Planta\", \"Veneno\"],\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (!navigator.onLine) {\r\n      if (localStorage.getItem(\"Tweet\") === null) {\r\n        setTweets(\"Loading...\");\r\n      } else {\r\n        setTweets(localStorage.getItem(\"Tweet\"));\r\n      }\r\n    } else {\r\n      console.log(detectBrowserLanguage());\r\n      var n = detectBrowserLanguage().startsWith(\"es\");\r\n      var i = detectBrowserLanguage().startsWith(\"en\");\r\n      if (n) {\r\n        const URL = `https://gist.githubusercontent.com/jhonatan89/e379fadf8ed0f5381a2d8f8f3dea90c3/raw/e2bc20df02828d297f99558551e37959ac97a6f8/pokemon-es.json`;\r\n        fetch(URL)\r\n          .then((res) => res.json())\r\n          .then((res) => {\r\n            //console.log(res.data.results[objetos[0]].name);\r\n            setTweets(res);\r\n            localStorage.setItem(\"Tweet\", res);\r\n          });\r\n      } else if (i) {\r\n        const URL = `https://gist.githubusercontent.com/jhonatan89/2089276d3ce0faceff8e55fc3459b818/raw/30ee1a77b3e328108faaaa9aaac6f2ddaa3d3711/pokemons-en.json`;\r\n        fetch(URL)\r\n          .then((res) => res.json())\r\n          .then((res) => {\r\n            //console.log(res.data.results[objetos[0]].name);\r\n            setTweets(res);\r\n            localStorage.setItem(\"Tweet\", res);\r\n          });\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  let handleClick = (item) => {};\r\n\r\n  let renderTweets = () => {\r\n    return (\r\n      <Container fluid className=\"m-0 w-100\">\r\n        <Row>\r\n          <Col sm={12}>\r\n            <h1 id=\"title\">Most wanted Pokemons</h1>\r\n            <Table id=\"elements\" responsive>\r\n              <tbody>\r\n                <tr className=\"thead-dark\">\r\n                  <th key={1}>#</th>\r\n                  <th key={2}>\r\n                    <FormattedMessage id=\"Image\" />\r\n                  </th>\r\n                  <th key={3}>\r\n                    <FormattedMessage id=\"Name\" />\r\n                  </th>\r\n                  <th key={4}>\r\n                    <FormattedMessage id=\"Description\" />\r\n                  </th>\r\n                  <th key={5}>\r\n                    <FormattedMessage id=\"Height\" />\r\n                  </th>\r\n                  <th key={6}>\r\n                    <FormattedMessage id=\"Weight\" />\r\n                  </th>\r\n                  <th key={7}>\r\n                    <FormattedMessage id=\"Type\" />\r\n                  </th>\r\n                </tr>\r\n                {elements}\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col sm={12}>\r\n            <Button id=\"buttonCanvas\" onClick={() => drawChart()}>\r\n              Draw Chart\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col sm={12}>\r\n            <div id=\"canvas\"></div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  const elements = tweets.map((item, i) => (\r\n    <tr key={i + 1} onClick={() => handleClick(item)}>\r\n      <td>{item.id}</td>\r\n      <td>\r\n        <Image\r\n          thumbnail\r\n          src={item.ThumbnailImage}\r\n          className=\"img-fluid img-thumbnail\"\r\n          alt={item.name}\r\n        ></Image>\r\n      </td>\r\n      <td>{item.name}</td>\r\n      <td>{item.description}</td>\r\n      <td>{item.height}</td>\r\n      <td>{item.weight}</td>\r\n      <td>\r\n        {item.type.map((item2, i2) => (\r\n          <Badge variant=\"secondary\" key={i2 + 1}>\r\n            {item2}\r\n          </Badge>\r\n        ))}\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  const drawChart = () => {\r\n    const width = 700;\r\n    const height = 500;\r\n    const margin = { top: 10, left: 80, bottom: 40, right: 10 };\r\n    const iwidth = width - margin.left - margin.right;\r\n    const iheight = height - margin.top - margin.bottom;\r\n\r\n    const canvas = d3.select(\"#canvas\");\r\n\r\n    const svg = canvas.append(\"svg\");\r\n    svg.attr(\"width\", width);\r\n    svg.attr(\"height\", height);\r\n\r\n    let g = svg\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n    const y = d3.scaleLinear().domain([0, 1102]).range([iheight, 0]);\r\n\r\n    const x = d3\r\n      .scaleBand()\r\n      .domain(tweets.map((d) => d.name))\r\n      .range([0, iwidth])\r\n      .padding(0.1);\r\n\r\n    const bars = g.selectAll(\"rect\").data(tweets);\r\n\r\n    bars\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"class\", \"bar\")\r\n      .style(\"fill\", \"steelblue\")\r\n      .attr(\"x\", (d) => x(d.name))\r\n      .attr(\"y\", (d) => y(d.height))\r\n      .attr(\"height\", (d) => iheight - y(d.height))\r\n      .attr(\"width\", x.bandwidth());\r\n\r\n    g.append(\"g\")\r\n      .classed(\"x--axis\", true)\r\n      .call(d3.axisBottom(x))\r\n      .attr(\"transform\", `translate(0, ${iheight})`);\r\n\r\n    g.append(\"g\").classed(\"y--axis\", true).call(d3.axisLeft(y));\r\n  };\r\n\r\n  return <div>{renderTweets()}</div>;\r\n}\r\n","C:\\Users\\Santiago\\Desktop\\RepositoriosWEB\\EjerciciosWeb\\Parcial2\\parcial2\\src\\components\\table\\row.js",[],"C:\\Users\\Santiago\\Desktop\\RepositoriosWEB\\EjerciciosWeb\\Parcial2\\parcial2\\src\\components\\NavBar\\NavBar.js",[],["36","37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":9,"column":10,"nodeType":"44","messageId":"45","endLine":9,"endColumn":23},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'FormattedDate' is defined but never used.","Identifier","unusedVar",["48"],["49"],"no-global-assign","no-unsafe-negation"]